{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-05-14T00:49:56.961293+00:00",
  "repo": "peppelinux/draft-demarco-oauth-status-attestations",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "out-of-scope",
      "description": "",
      "color": "E6C656"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "I_kwDOK4XJ0s5-J5yj",
      "title": "Credential jwt in the status attestation request",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/3",
      "state": "CLOSED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "fmarino-ipzs"
      ],
      "labels": [],
      "body": "For privacy and security reasons, we should remove the credential jwt from the status attestation request. \nThe credential_pop value should be a unique identifier of the credential, for example the hash value of the credential.\nThe credential issuer is able to get the credential from the hash value, check the status and return the status attestation. ",
      "createdAt": "2024-02-03T15:11:07Z",
      "updatedAt": "2024-02-23T17:47:38Z",
      "closedAt": "2024-02-23T17:47:38Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "If we proceed with the approach of not accessing the credential in secure storage (thus not requiring user consent), the unique identifier would not be derived from the credential attributes. This means there could be JWTs without a jti or other credential formats lacking unique identifiers. \r\n\r\nConsequently, to uniquely identify a credential, it would be necessary to use a hash of the credential itself. For a JWT, this would involve hashing the JWT; for an mDoc in CBOR format, it would involve hashing its base64 representation, and so forth.",
          "createdAt": "2024-02-03T15:16:02Z",
          "updatedAt": "2024-02-03T22:49:39Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOK4XJ0s5-io_4",
      "title": "todo: privacy considerations section",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/4",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "peppelinux"
      ],
      "labels": [],
      "body": "it is really required and also requested be ppl from the IETF ML",
      "createdAt": "2024-02-07T13:13:09Z",
      "updatedAt": "2024-02-14T14:08:32Z",
      "closedAt": "2024-02-14T14:08:31Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> IMO, neither the \"Token Status List\", nor to the \"OAuth Status Attestations\" are the right way to address two privacy considerations: \"Unlinkability between verifiers\" and \"Untrackability by digital credential issuers\".\r\n\r\nhere my notes\r\n\r\n**Unlinkability between verifiers**\r\nStatus Attestations are designed to be privacy-preserving by not requiring verifiers to gather any additional information from third-party entities. This means that each verifier independently verifies the status of a digital credential, though the status attestation, without needing to interact with or reveal information to other verifiers or third-party status list providers. This approach ensures that actions performed by one verifier cannot be linked to actions performed by another verifier, maintaining unlinkability between them.\r\n\r\n**Untrackability by digital credential issuers**\r\nSince Status Attestations can be verified statically without further communication with the credential issuer or any other party, the issuer cannot track when or where the digital credential is being verified. This is in contrast to models where the verifier must query a central status list or the issuer directly, which would allow the issuer to track the usage of the digital credential. By providing all necessary information within the Status Attestation itself, it ensures that the issuer cannot track the verification activities related to a specific digital credential.",
          "createdAt": "2024-02-07T13:40:31Z",
          "updatedAt": "2024-02-07T13:40:42Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOK4XJ0s5-ipmt",
      "title": "Change draft name",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/5",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "> it would be good to avoid the term \"attestations\" because it is already used for a different purpose (in the IETF).\r\n\r\nCould it be \"status tokens\" or \"status assertions\"?",
      "createdAt": "2024-02-07T13:14:29Z",
      "updatedAt": "2024-05-09T16:42:18Z",
      "closedAt": "2024-05-09T16:42:18Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "What about Status Evidence?\r\n\r\nThis would be close to the Wallet Trust Evidence we have for eIDAS",
          "createdAt": "2024-02-20T11:43:26Z",
          "updatedAt": "2024-02-20T11:43:26Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I suggest we have a chat with RATS about this... they use these terms a lot, and will be very unhappy if we do not attempt to foster alignment... as will I : )",
          "createdAt": "2024-02-28T14:43:29Z",
          "updatedAt": "2024-02-28T14:43:29Z"
        },
        {
          "author": "bc-pi",
          "authorAssociation": "NONE",
          "body": "\"status assertions\" seems reasonably good/appropriate here. The term \"attestation\" is just quite popular right now and carries some assumptions/connotations due to wide use in a different context. The term \"assertion\" is overloaded too (as are most terms) but less problematically so. And I think \"assertion\" does nicely convey the intent. ",
          "createdAt": "2024-02-28T17:46:07Z",
          "updatedAt": "2024-02-28T17:46:07Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "I suddenly realized that \"status $something\" misses the subject, the name would therefore be \"Digital Credential Status Assertions\"\r\n\r\nThis specification excludes its use with traditional OAuth 2.0/OIDC tokens. While the OAuth Status List shares some similarities, the OAuth 2.0 Introspection endpoint is deemed sufficient for such tokens due to several key differences:\r\n\r\n- **Interaction**: Parties interact differently in the context of traditional tokens compared to this specification.\r\n- **Privacy**: Distinct privacy requirements apply to each scenario.\r\n- **Offline usage**: Offline use cases, which necessitate this specification, are not a requirement for legacy infrastructures utilizing traditional tokens.",
          "createdAt": "2024-02-29T09:52:21Z",
          "updatedAt": "2024-02-29T09:52:33Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@marinaado Interesting reference: https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/pull/227/files#diff-585fb424519b79cf000445f3425fa56d328cbaca5d2a622740ddc4e5ca91dbe1R936",
          "createdAt": "2024-04-19T12:59:03Z",
          "updatedAt": "2024-04-19T12:59:03Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Following the Architecture for Trustworthy and Transparent Digital Supply Chains (SCITT), this looks pretty close to the purpose of this specs\r\n\r\n````\r\n{{NIST.SP.800-63-3}} defines \"assertion\" as \"A statement from a verifier to an RP that contains information about a subscriber.\r\nAssertions may also contain verified attributes.\"\r\n````\r\n\r\n@SaraConsoliACN could you please create a PR with the proposal of the specification name change?",
          "createdAt": "2024-04-30T09:55:20Z",
          "updatedAt": "2024-04-30T09:55:20Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/38",
          "createdAt": "2024-05-09T16:42:18Z",
          "updatedAt": "2024-05-09T16:42:18Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOK4XJ0s5_BrbI",
      "title": "Error Codes",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/7",
      "state": "CLOSED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "peppelinux"
      ],
      "labels": [],
      "body": "If the Status Attestation is requested for a non-existent, expired, revoked, or invalid Digital Credential, or the HTTP Request is not valid (missing or invalid parameters) the Credential Issuer MUST respond with an HTTP Response including the following parameters:\r\n\r\n- error: The proper error code\r\n- error_description: Human-readable text providing additional information, used to assist the Wallet Instance in understanding the error that occurred (e.g. some attributes are changed, revocation reason, etc.)\r\n\r\n```\r\n HTTP/1.1 400 Bad Request\r\n     Content-Type: application/json;charset=UTF-8\r\n     Cache-Control: no-store\r\n     Pragma: no-cache\r\n\r\n     {\r\n       \"error\":\"invalid_request\"\r\n       \"error_description\": \"The signature of credential_pop JWT is not valid\"\r\n     }\r\n```\r\n\r\nIt could be useful to add an error code section.",
      "createdAt": "2024-02-12T23:06:15Z",
      "updatedAt": "2024-02-14T14:04:11Z",
      "closedAt": "2024-02-14T14:04:11Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDOK4XJ0s5_H--N",
      "title": "Define Proof of Possession of a Credential",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/11",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "peppelinux"
      ],
      "labels": [],
      "body": "Does it mean just having the bytes?\r\n\r\nDoes it mean having the bytes, and controlling a private key for use with `cnf` ?",
      "createdAt": "2024-02-13T17:13:00Z",
      "updatedAt": "2024-02-28T14:08:09Z",
      "closedAt": "2024-02-28T14:08:08Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "I_kwDOK4XJ0s5_NVbM",
      "title": "implementation requirement",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/13",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "when the VCI issues a credential it must store an hash for the comparison when the status attestation request happen",
      "createdAt": "2024-02-14T12:01:09Z",
      "updatedAt": "2024-02-23T17:47:38Z",
      "closedAt": "2024-02-23T17:47:38Z",
      "comments": []
    },
    {
      "number": 14,
      "id": "I_kwDOK4XJ0s5_ONSn",
      "title": "extended error codes",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/14",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "For the sake of clarity, I explicitly would provide a list of error codes that are useful in this specification. For example, it is not clear how to handle the case of an error response due to a Credential revocation. I don't see a clear error code in the RFC6749 that is clear for this scenario. We could put this in an issue and postpone this discussion if you want.\r\n\r\n_Originally posted by @fmarino-ipzs in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/10#discussion_r1489337287_\r\n            ",
      "createdAt": "2024-02-14T14:03:32Z",
      "updatedAt": "2024-05-09T13:28:30Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 15,
      "id": "I_kwDOK4XJ0s5_OPc6",
      "title": "editorial - privacy considerations",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/15",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "from \r\n```\r\nThese privacy considerations are integral to the design of Status Attestations \r\nand reflect a deliberate effort to balance security and privacy needs in the \r\ndigital credential ecosystem. By adhering to these principles, Status Attestations \r\ncontribute to a more secure and privacy-respecting digital world.\r\n````\r\nto\r\n```\r\nStatus Attestations are based on a privacy-by-design approach, reflecting a \r\ndeliberate effort to balance security and privacy needs in the digital credential ecosystem.\r\n```\r\n\r\n_Originally posted by @fmarino-ipzs in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/9#discussion_r1489361569_\r\n            ",
      "createdAt": "2024-02-14T14:08:13Z",
      "updatedAt": "2024-02-28T20:47:04Z",
      "closedAt": "2024-02-28T20:47:03Z",
      "comments": []
    },
    {
      "number": 16,
      "id": "I_kwDOK4XJ0s6AMWMS",
      "title": "IANA named hash registry, and make sha-256 mandatory to implement.",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/16",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "lets use the IANA named hash registry, and make sha-256 mandatory to implement.\r\n\r\nhttps://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg\r\n\r\nAlternatively, we can use the cose registry which includes hash algorithms:\r\n\r\nhttps://www.iana.org/assignments/cose/cose.xhtml#algorithms\r\n\r\nthe \"COSE\" style for this kind of thing would be:\r\n\r\n```\r\ncredential_hash: [alg, hash]\r\n```\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/6#discussion_r1487916459_\r\n            ",
      "createdAt": "2024-02-23T09:40:49Z",
      "updatedAt": "2024-02-23T17:47:38Z",
      "closedAt": "2024-02-23T17:47:37Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "see also https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/6#discussion_r1487918496",
          "createdAt": "2024-02-23T09:42:19Z",
          "updatedAt": "2024-02-23T09:42:19Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOK4XJ0s6AQ42s",
      "title": "credential_pop kid",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/19",
      "state": "OPEN",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "We should generalize the key identifier by adding:\r\n\r\n- jwk\r\n- x5c\r\n\r\nOnly one of them MUST be used. ",
      "createdAt": "2024-02-23T22:39:25Z",
      "updatedAt": "2024-05-09T13:28:11Z",
      "closedAt": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Not info info on this issue to fully follow the request.\r\n\r\nwhen using `cnf` claim in the COSE or JOSE Payload, typically you would have:\r\n\r\nMUST support `\"cnf\": { \"jwk\": ...}}`\r\nMAY support `\"cnf\": { \"kid\": ...}}`\r\n\r\nWhen referring to the issuer's signing keys for the credential in the protected header, typically you would have:\r\n\r\nMUST support `\"kid\":  ...`\r\nMAY support `\"x5t\":  ...`\r\nMAY support `\"jwk\":  ...`\r\n\r\nI would not recommend `x5c`  in protected headers at this point, for new specs.",
          "createdAt": "2024-02-28T14:16:15Z",
          "updatedAt": "2024-02-28T14:16:15Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDOK4XJ0s6ARKN9",
      "title": "credential_pop typ",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/20",
      "state": "OPEN",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "The credential_pop is a JWT. I would consider `typ` as OPTIONAL and value it with `jwt`.\r\nIf omitted by default it is assumed to be `jwt`.",
      "createdAt": "2024-02-24T00:16:16Z",
      "updatedAt": "2024-05-09T13:28:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "We might consider addressing the CWT case at the same time here.\r\n\r\nIts against the JWT BCP to omit typ at this point: https://datatracker.ietf.org/doc/html/rfc8725#name-use-explicit-typing\r\n\r\nI'd propose the following:\r\n\r\ncredential_pop MUST be a JWT or CWT.\r\n\r\nThe typ protected header parameter SHOULD be \"kb+jwt\" or \"kb+cwt\".\r\n\r\n",
          "createdAt": "2024-02-28T14:11:20Z",
          "updatedAt": "2024-02-28T14:11:20Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "I and @fmarino-ipzs agreed with you, please open a PR if possibile\r\n\r\nthis issue is tagged under the milestone 01",
          "createdAt": "2024-02-28T14:22:30Z",
          "updatedAt": "2024-02-28T14:22:30Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOK4XJ0s6AtPRa",
      "title": "Define Mechanism for Verifiers to Request Fresh Status Attestations",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/22",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "enhancement",
        "wontfix",
        "out-of-scope"
      ],
      "body": "In the current implementation of the Status Attestation process, there is a need to introduce a mechanism that allows verifiers to specify how recent (in minutes) a Status Attestation needs to be. This requirement stems from scenarios where the verifier of a digital credential necessitates the Status Attestation to be exceptionally fresh to ensure the highest level of accuracy and security.\r\n\r\nTo accommodate this, we propose the development of a feature within the Status Attestation request protocol that enables verifiers to indicate a maximum age (N minutes) for the Status Attestation. This will ensure that the attestation provided is no older than the specified timeframe, meeting the verifier's requirements for freshness.\r\n\r\nThis feature necessitates the Wallet Instance to have an active internet connection to obtain the most up-to-date Status Attestation from the Credential Issuer, as per the verifier's request. \r\n\r\nThis information should be statically provided, per credential type, within the presentation request or within the presentation definition in the verifier's metadata.",
      "createdAt": "2024-02-28T16:21:03Z",
      "updatedAt": "2024-02-29T09:35:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "This is out of scope for this draft, just an issue for our awareness related to RP's requirements and claims",
          "createdAt": "2024-02-28T20:47:53Z",
          "updatedAt": "2024-02-28T20:47:53Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOK4XJ0s6AyvFE",
      "title": "aud parameter in credential_pop",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/23",
      "state": "CLOSED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "`aud` parameter should be set to the endpoint at which the credential_pop is used. ",
      "createdAt": "2024-02-29T09:19:33Z",
      "updatedAt": "2024-03-04T15:37:20Z",
      "closedAt": "2024-03-04T15:37:20Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Already there\r\nhttps://github.com/peppelinux/draft-demarco-oauth-status-attestations/blob/main/draft-demarco-oauth-status-attestations.md?plain=1#L316",
          "createdAt": "2024-02-29T09:34:29Z",
          "updatedAt": "2024-02-29T09:34:29Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOK4XJ0s6BvULj",
      "title": "Need privacy considerations for issuer tracking",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/26",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Requiring continuous credential pop from a wallet so a status attestation is available also impacts holder privacy.\r\n\r\nThere should be privacy considerations that compare the trade offs associated this approach when compared to requesting status lists anonymously",
      "createdAt": "2024-03-08T19:41:14Z",
      "updatedAt": "2024-04-29T12:14:24Z",
      "closedAt": "2024-04-29T12:14:24Z",
      "comments": [
        {
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "body": "\r\n@OR13 Can we consider this issue closed now that we have dedicated a chapter to privacy considerations?",
          "createdAt": "2024-04-29T10:09:17Z",
          "updatedAt": "2024-04-29T10:09:17Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "I_kwDOK4XJ0s6C0sac",
      "title": "OID4VCI metadata should not be defined in a standalone draft",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/27",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "IMO, OID4VCI metadata should not be defined in a separate document. At least as long there is no IANA registry for that.",
      "createdAt": "2024-03-19T12:33:37Z",
      "updatedAt": "2024-03-19T12:33:37Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 28,
      "id": "I_kwDOK4XJ0s6C0vdZ",
      "title": "Define use case for this status attestation mechanism",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/28",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "It is not clear to me why other status mechanisms cannot be used instead of the proposed one. It would be good to understand under which circumstances the proposed status mechanism has clear benefits. I believe it is mostly saving HTTP requests for RPs, right?\r\n\r\nI don't necessarily agree with the statements made on privacy and trust model that are included in the document. IMO, OAuth Status List is privacy preserving and the trust model could be the same as for the proposed option. In fact, some people are implementing Status List using the existing issuer trust model.",
      "createdAt": "2024-03-19T12:39:56Z",
      "updatedAt": "2024-03-19T21:17:36Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@awoie Does the status list prevent the monitoring of the credential status over time, outside the scope of the authentication?\r\n\r\nCould you please provide which part of the privacy and trust model statements you don't agree?\r\n\r\nthis specification enables an OCSP stapling like approach, nothing prevents to merge this approach within the status list specification (as proposed before the born of this specs)",
          "createdAt": "2024-03-19T13:27:50Z",
          "updatedAt": "2024-03-19T13:27:50Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "@awoie I think the main benefit is probably presentation size, and verifier complexity.\n\nIt's true a holder could present a reasonably fresh signed CRL instead of use OCSP.\n\nIt's also true that the status attestation refresh window could impose some connectivity limits on the holder.\n\nAs a general rule, many systems are forbidden from calling out to check status, and transmitting an entire CRL only to support a single certificate validation is wasteful from the holder perspective... It also communicates status changes for previously transmitted credentials, or yet to be received credentials... So it leaks information regarding other transactions.",
          "createdAt": "2024-03-19T21:17:35Z",
          "updatedAt": "2024-03-19T21:17:35Z"
        }
      ]
    },
    {
      "number": 29,
      "id": "I_kwDOK4XJ0s6C1OoJ",
      "title": "Missing validation steps for verifiers",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/29",
      "state": "OPEN",
      "author": "awoie",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "It is not clear what happens if the verifier encounters a credential with a status attestation method in the `status` field but does not receive a status attestation. \r\n\r\nThree questions:\r\n- Should the verifier reject a credential presentation if the wallet did not provide a status attestation?\r\n- How does the holder know whether the verifier requires a status attestation?\r\n- Why would a holder ever present a credential along with a revoked status attestation?",
      "createdAt": "2024-03-19T13:33:40Z",
      "updatedAt": "2024-03-19T13:43:26Z",
      "closedAt": null,
      "comments": [
        {
          "author": "awoie",
          "authorAssociation": "NONE",
          "body": "> * Should the verifier reject a credential presentation if the wallet did not provide a status attestation?\r\n\r\nThis is especially important if the holder is not able to request a valid status attestation anymore and the credential became invalid.",
          "createdAt": "2024-03-19T13:37:16Z",
          "updatedAt": "2024-03-19T13:37:16Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "A credential might have more than a single status validation mechanism. The scope of the status attestation method in the status object is the evidence that this credential - and its issuer -  supports the status attestation. This enables the coesistence of status lsit and status attestation in the same credential and the use of status attestation for offline flows\r\n\r\nIf a verifier gets the status.status_attestation within a presented credential without obtaining within the vp_token a status attestation token, according to its policies, decides if the revocation check is required or not and if other revocation check mechanism are available.\r\n\r\n> Should the verifier reject a credential presentation if the wallet did not provide a status attestation?\r\n\r\nIt depends on the RP's policies.\r\n\r\n  - This is especially important if the holder is not able to request a valid status attestation anymore and the credential became invalid.\r\n  \r\n  that would be a proof that the holder unsatisfies the requirement of providing the proof that the credential is still valid. The RP behaviour depends on its policies.\r\n  \r\n\r\n> How does the holder know whether the verifier requires a status attestation?\r\n\r\nIt doesn't. When the credential is issued and contains a status.status_attestation, the holder should provide in the vp_token the status attestation related to each credential supporting this. We can expand this use case as well with community contributions.\r\n\r\n> Why would a holder ever present a credential along with a revoked status attestation?\r\n\r\nit might depend by the use cases. At the current stage the status attestation is intended for unrevoked credentials. We can expand this use case as well with community contributions.",
          "createdAt": "2024-03-19T13:43:25Z",
          "updatedAt": "2024-03-19T13:43:25Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOK4XJ0s6DWoAb",
      "title": "Status Attestation in batch",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/30",
      "state": "OPEN",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "enhancement"
      ],
      "body": "If the Wallet Instance has several Credentials issued by the same Issuer, we could introduce a mechanism to request all the Status attestations referring to the Credentials. Probably, this could be achieved by allowing the `credential_pop` to be an array.",
      "createdAt": "2024-03-23T07:21:57Z",
      "updatedAt": "2024-03-23T07:21:58Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 31,
      "id": "I_kwDOK4XJ0s6EWDFN",
      "title": "eIDAS II Regulation requirements from Art. 5a(16)",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/31",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Art. 5a(16). The technical framework of the European Digital Identity Wallet shall:\r\n\r\n(a) not allow providers of electronic attestations of attributes or any other party, after the issuance of the attestation of attributes, to obtain data that allows transactions or user behaviour to be tracked, linked or correlated, or knowledge of transactions or user behaviour to beotherwise obtained, unless explicitly authorised by the user;\r\n\r\nAt the current stage, the status attestation are completely in line with this.",
      "createdAt": "2024-04-02T12:18:28Z",
      "updatedAt": "2024-04-02T12:18:28Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 32,
      "id": "I_kwDOK4XJ0s6FZMvq",
      "title": "Reconsider PoP mechanism to get a new status attestation",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/32",
      "state": "OPEN",
      "author": "paulbastian",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "PoP of Credential cnf key hould not be used, instead an api-key exchanged between wallet and Issuer.\r\n\r\nAdvantages are:\r\n- enables claim-based bound credentials\r\n- does not require user interaction as the PoP key may be bound to PIN/Biometrics but the api-key does not, as it is provided by the Issuer during issuance",
      "createdAt": "2024-04-11T15:10:52Z",
      "updatedAt": "2024-04-30T12:31:36Z",
      "closedAt": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "I see the benefits @paulbastian and I believe that these should be further discussed, here some additional considerations:\r\n\r\n1. how it would enable claim-based bound credentials?\r\n2. this depends by impl. We connsider that the attestations are fetched when the user activate/execute the wallet, therefore asap after the local authentication",
          "createdAt": "2024-04-17T12:33:38Z",
          "updatedAt": "2024-04-17T12:33:38Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "perhaps we say \"issuer MUST authenticate the wallet\", and MUST support PoP and MAY support other mechanisms, and briefly describe them?",
          "createdAt": "2024-04-30T12:31:35Z",
          "updatedAt": "2024-04-30T12:31:35Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "I_kwDOK4XJ0s6IW2bh",
      "title": "status assertion request kid",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/39",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "1. `kid` should be intended as required when `x5c` is not present, where at least one of them MUST be present and related to the cryptogric public key of the related credential\r\n",
      "createdAt": "2024-05-09T13:22:44Z",
      "updatedAt": "2024-05-09T13:27:49Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 40,
      "id": "I_kwDOK4XJ0s6IW4c6",
      "title": "status assertion credential binding",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/40",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "the binding of the status assertion with the credential is made with the credential hash, signed within the status assertion.\r\n\r\nin the current text, there is also the `cnf.jwk` claim, privinding the binding with the cryptograohic material included in the credential. \r\nthis latter represent an additional binding and this require additional elements to guide the implementors in how to behave when one of the provided binding is not aligned with the credential (assertion invalidation, I would say).\r\n\r\nAt the same time, there may be cases when the related credential doesn't have any cryptographic key binding, in these cases the claim `cnf.jwj` doersn't have any reason to exists, therefore any reason to be considered as a mandatory claim within the status assertion payload.\r\n\r\nThe proposal of the current issue, is to keep as mandatory only the credential hash binding, removing the `cnf.jwk` from the set of the required parameters.\r\n\r\n````\r\n{\r\n    \"alg\": \"ES256\",\r\n    \"typ\": \"status-attestation+jwt\",\r\n    \"kid\": $ISSUER-JWKID\r\n}\r\n.\r\n{\r\n    \"iss\": \"https://issuer.example.org\",\r\n    \"iat\": 1504699136,\r\n    \"exp\": 1504700136,\r\n    \"credential_hash\": $CREDENTIAL-HASH,\r\n    \"credential_hash_alg\": \"sha-256\",\r\n    \"cnf\": {\r\n        \"jwk\": {...}\r\n    }\r\n}\r\n````",
      "createdAt": "2024-05-09T13:27:17Z",
      "updatedAt": "2024-05-09T13:27:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 41,
      "id": "I_kwDOK4XJ0s6IW5Q9",
      "title": "history/changelog section",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/41",
      "state": "CLOSED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [
        "SaraConsoliACN"
      ],
      "labels": [],
      "body": "create an history/changelog section to track all the changes in the draft",
      "createdAt": "2024-05-09T13:29:07Z",
      "updatedAt": "2024-05-09T16:42:38Z",
      "closedAt": "2024-05-09T16:42:38Z",
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Resolved by https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/38",
          "createdAt": "2024-05-09T16:42:38Z",
          "updatedAt": "2024-05-09T16:42:38Z"
        }
      ]
    },
    {
      "number": 43,
      "id": "I_kwDOK4XJ0s6Ip9Tp",
      "title": "Assertions related to a credential that had a confirmation claim.",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/43",
      "state": "OPEN",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "@OR13 's\r\nI wonder if these are all really \"credentials\"... or are they simply assertions related to a credential that had a confirmation claim?\r\n\r\n- https://datatracker.ietf.org/doc/html/rfc7800#section-3.1\r\n- https://datatracker.ietf.org/doc/html/rfc8747#section-3.1\r\n\r\nNow that its an array, can each of these items demonstrate possession of a different key?\r\n\r\nCan methods be mixed, for example, cred-1 uses COSE Key, cred-2 use JKT ?\r\n\r\n_Originally posted by @OR13 in https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36#discussion_r1591006026_\r\n            ",
      "createdAt": "2024-05-13T12:35:09Z",
      "updatedAt": "2024-05-13T12:35:28Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOK4XJ0s5hyqCy",
      "title": "Editorial Revision",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/1",
      "state": "MERGED",
      "author": "asharif1990",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-12T13:11:45Z",
      "updatedAt": "2023-12-12T15:42:31Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "7d5de6ace0457c8275377a97406550aa5ddc88c5",
      "headRepository": "asharif1990/draft-demarco-status-attestations",
      "headRefName": "revision",
      "headRefOid": "c88a6f0e1b7056ac6aaeea596377f709a490c1f2",
      "closedAt": "2023-12-12T15:42:31Z",
      "mergedAt": "2023-12-12T15:42:31Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "8c668103f2c6fc0aad9268948e07cdd62d9da07f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5p8csk",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-12-12T13:20:04Z",
          "updatedAt": "2023-12-12T13:22:37Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "@asharif1990 I used the defined terms after their definition, withing the dedicated section.\r\n\r\nAbstract and introduction sections doesn't define nothing\r\n\r\nI'm available to merge these but I'd like to ask you to get informed from other authors about this before merging",
              "createdAt": "2023-12-12T13:20:04Z",
              "updatedAt": "2023-12-12T13:22:37Z"
            },
            {
              "originalPosition": 80,
              "body": "here we don't have the definition of Digital Credentials for example",
              "createdAt": "2023-12-12T13:20:43Z",
              "updatedAt": "2023-12-12T13:22:37Z"
            },
            {
              "originalPosition": 346,
              "body": "it is a SHOULD since a RP may check the revocation or not, depending by different factors.\r\n\r\nthere are some credentials that even if expired doesn't mean that are not usable, eg: age over.\r\n\r\nthen for RP's viewpoint it is a SHOULD and not a MUST",
              "createdAt": "2023-12-12T13:22:25Z",
              "updatedAt": "2023-12-12T13:22:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p8ec3",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-12-12T13:23:42Z",
          "updatedAt": "2023-12-12T13:26:20Z",
          "comments": [
            {
              "originalPosition": 170,
              "body": "the MUST is listed in each requirement, there may be some requirement in the future with SHOULD. That's why I prefer to use the normative language within each point",
              "createdAt": "2023-12-12T13:23:43Z",
              "updatedAt": "2023-12-12T13:26:20Z"
            },
            {
              "originalPosition": 236,
              "body": "```suggestion\r\n- The Credential Issuer MUST verify the signature of the `credential_pop` object using\r\n```",
              "createdAt": "2023-12-12T13:24:14Z",
              "updatedAt": "2023-12-12T13:26:20Z"
            },
            {
              "originalPosition": 263,
              "body": "`MUST be equal to JWK thumbprint of the key in `cnf` Claim of Wallet Instance Attestation`\r\n\r\nthis is the italian impl profile, not of interest in the IETF OAuth WG, please remove. IT is also not compatible with the DE approach, while we have achieved a compromise that I want to respect in any place.",
              "createdAt": "2023-12-12T13:25:10Z",
              "updatedAt": "2023-12-12T13:26:20Z"
            },
            {
              "originalPosition": 263,
              "body": "```suggestion\r\n| **iss** | Wallet identifier. | {{RFC9126}}, {{RFC7519}} |\r\n```",
              "createdAt": "2023-12-12T13:25:27Z",
              "updatedAt": "2023-12-12T13:26:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p80Cw",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "asharif1990",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T14:03:48Z",
          "updatedAt": "2023-12-12T14:03:48Z",
          "comments": [
            {
              "originalPosition": 346,
              "body": "Okay, this sounds reasonable to me. However, somehow we should include this inside the draft, otherwise having should would be strange if you agree. ",
              "createdAt": "2023-12-12T14:03:48Z",
              "updatedAt": "2023-12-12T14:03:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p9CfR",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "asharif1990",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T14:30:10Z",
          "updatedAt": "2023-12-12T14:30:11Z",
          "comments": [
            {
              "originalPosition": 170,
              "body": "okay. then probably, I will re-write it in a more natural way such as: \"The general requirements for the implementation of  Status Attestation are listed in this section.\"",
              "createdAt": "2023-12-12T14:30:10Z",
              "updatedAt": "2023-12-12T14:30:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p9GEu",
          "commit": {
            "abbreviatedOid": "9059880"
          },
          "author": "asharif1990",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T14:36:28Z",
          "updatedAt": "2023-12-12T14:36:29Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Okay, you are right. In the abstract and intro, it is possible to avoid them. I wasn't familiar with IETF style. we can avoid the capitalized terms in the intro and abstract then",
              "createdAt": "2023-12-12T14:36:29Z",
              "updatedAt": "2023-12-12T14:36:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p94mM",
          "commit": {
            "abbreviatedOid": "95ccedb"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-12-12T15:41:57Z",
          "updatedAt": "2023-12-12T15:41:57Z",
          "comments": [
            {
              "originalPosition": 349,
              "body": "```suggestion\r\n- check the presence of `status.status_attestation` in the Digital Credential. If true, the Verifier SHOULD:\r\n```",
              "createdAt": "2023-12-12T15:41:57Z",
              "updatedAt": "2023-12-12T15:41:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5p95Ro",
          "commit": {
            "abbreviatedOid": "c88a6f0"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-12T15:42:23Z",
          "updatedAt": "2023-12-12T15:42:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOK4XJ0s5ls8PL",
      "title": "added Orie as co-author",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/2",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-01T13:36:24Z",
      "updatedAt": "2024-02-01T19:54:14Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "3202bedcfab318cf186432117e2ba8dec58f1d5a",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "orie",
      "headRefOid": "c6223b86147b3b9ff5badd6b7a5c961de3459e93",
      "closedAt": "2024-02-01T19:54:13Z",
      "mergedAt": "2024-02-01T19:54:13Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "70bc694739ca1b7b7d5db85a3ce5a83e346cb9e5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5uqQVo",
          "commit": {
            "abbreviatedOid": "c6223b8"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-01T13:59:51Z",
          "updatedAt": "2024-02-01T13:59:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOK4XJ0s5msEjT",
      "title": "fix: credential hash in the credential_pop",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/6",
      "state": "MERGED",
      "author": "fmarino-ipzs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR closes #3 \r\n",
      "createdAt": "2024-02-12T22:44:00Z",
      "updatedAt": "2024-02-23T12:18:39Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "dev",
      "baseRefOid": "673a8e16ce50cc4ef409721c70279dc87db80446",
      "headRepository": "fmarino-ipzs/draft-demarco-oauth-status-attestations",
      "headRefName": "credential-pop",
      "headRefOid": "71f5b3aea48af90608f764dbd8cd4d24ec4a95ef",
      "closedAt": "2024-02-23T12:18:39Z",
      "mergedAt": "2024-02-23T12:18:39Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "6e5fae6800ead1fc1a49cf80de9327a74a3a2fb9"
      },
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "I merge on another branch to continue working on this PR and then I reopen the PR",
          "createdAt": "2024-02-23T12:11:39Z",
          "updatedAt": "2024-02-23T12:11:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5v2SmY",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-12T22:46:19Z",
          "updatedAt": "2024-02-12T22:46:19Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "@peppelinux probably we could remove the credential_format. \r\nWDYT?",
              "createdAt": "2024-02-12T22:46:19Z",
              "updatedAt": "2024-02-12T22:46:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v7yNT",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T13:30:32Z",
          "updatedAt": "2024-02-13T13:30:32Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "yes, I'm on it\r\n",
              "createdAt": "2024-02-13T13:30:32Z",
              "updatedAt": "2024-02-13T13:30:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v7z9h",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T13:33:00Z",
          "updatedAt": "2024-02-13T13:33:00Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-13T13:33:00Z",
              "updatedAt": "2024-02-13T13:33:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v70m7",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T13:33:48Z",
          "updatedAt": "2024-02-13T13:33:48Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-02-13T13:33:48Z",
              "updatedAt": "2024-02-13T13:33:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v71Yq",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "please merge my suggestion",
          "createdAt": "2024-02-13T13:35:25Z",
          "updatedAt": "2024-02-13T13:35:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5v8Ids",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T14:03:55Z",
          "updatedAt": "2024-02-13T14:03:55Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "lets use the IANA named hash registry, and make sha-256 mandatory to implement.\r\n\r\nhttps://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg\r\n\r\nAlternatively, we can use the cose registry which includes hash algorithms:\r\n\r\nhttps://www.iana.org/assignments/cose/cose.xhtml#algorithms\r\n\r\nthe \"COSE\" style for this kind of thing would be:\r\n\r\n```\r\ncredential_hash: [alg, hash]\r\n```",
              "createdAt": "2024-02-13T14:03:55Z",
              "updatedAt": "2024-02-13T14:03:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v8JQs",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T14:05:11Z",
          "updatedAt": "2024-02-13T14:05:11Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "SD-JWT uses the IANA registry: https://datatracker.ietf.org/doc/html/draft-ietf-oauth-selective-disclosure-jwt-07#section-5.1.1",
              "createdAt": "2024-02-13T14:05:11Z",
              "updatedAt": "2024-02-13T14:05:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v83FX",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T15:13:33Z",
          "updatedAt": "2024-02-13T15:13:33Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "seems like the `typ` or `cty` claim might be used here as well.",
              "createdAt": "2024-02-13T15:13:33Z",
              "updatedAt": "2024-02-13T15:13:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9m3F",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:23:33Z",
          "updatedAt": "2024-02-13T16:23:33Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "I don't see how having these claims would be useful. How would the Credential Issuer use this information?",
              "createdAt": "2024-02-13T16:23:33Z",
              "updatedAt": "2024-02-13T16:23:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9sRM",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:32:33Z",
          "updatedAt": "2024-02-13T16:32:33Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Regarding the claim name I prefer the first option. \r\nWith regard to the sha-256, I suggest to make the claim OPTIONAL and if omitted we could say that the default value is sha-256. WDYT?",
              "createdAt": "2024-02-13T16:32:33Z",
              "updatedAt": "2024-02-13T16:32:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v90TG",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:45:26Z",
          "updatedAt": "2024-02-13T16:45:26Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "yes, let's reduce the information about the payload of the credential for an augmented privacy",
              "createdAt": "2024-02-13T16:45:26Z",
              "updatedAt": "2024-02-13T16:45:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v91Ix",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:47:04Z",
          "updatedAt": "2024-02-13T16:47:05Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I would make it REQUIRED since I love thing explicit. If a day SHA-256 would be vulnerable and another specification woudl extend this one bringin an updated set of algs, the implementation would then always specify the alg making this aspect not ambiguous",
              "createdAt": "2024-02-13T16:47:04Z",
              "updatedAt": "2024-02-13T16:47:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xHNwW",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T09:39:22Z",
          "updatedAt": "2024-02-23T09:39:23Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "@OR13 I have asked to remove the credential format, since we give only the credential hash without disclosing any information about the credential",
              "createdAt": "2024-02-23T09:39:22Z",
              "updatedAt": "2024-02-23T09:39:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xHO5N",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T09:41:59Z",
          "updatedAt": "2024-02-23T09:41:59Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "@OR13 I moved your comment in a [separate issue](https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/16), to unblock this PR related to the hash \r\n\r\nA PR wil be create asap, when this PR will be merged\r\n\r\n",
              "createdAt": "2024-02-23T09:41:59Z",
              "updatedAt": "2024-02-23T09:41:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xHPMu",
          "commit": {
            "abbreviatedOid": "5315870"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T09:42:39Z",
          "updatedAt": "2024-02-23T09:42:39Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "moved in the issue https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/16",
              "createdAt": "2024-02-23T09:42:39Z",
              "updatedAt": "2024-02-23T09:42:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xH_BU",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:36:10Z",
          "updatedAt": "2024-02-23T11:36:10Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n| **credential_hash_alg** |  The hash value of a Digital Credential is derived by computing the base64url encoded hash of the Digital Credential. | this specification |\r\n```",
              "createdAt": "2024-02-23T11:36:10Z",
              "updatedAt": "2024-02-23T11:40:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xH_Gg",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:36:24Z",
          "updatedAt": "2024-02-23T11:36:24Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "@OR13 WDYT?^",
              "createdAt": "2024-02-23T11:36:24Z",
              "updatedAt": "2024-02-23T11:36:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xH_PA",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:36:47Z",
          "updatedAt": "2024-02-23T11:36:47Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe request MUST contain the base64url hash value of the Digital Credential, for which the Status Attestation\r\n```",
              "createdAt": "2024-02-23T11:36:47Z",
              "updatedAt": "2024-02-23T11:41:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xH_ch",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:37:19Z",
          "updatedAt": "2024-02-23T11:37:19Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "See my change suggestion in the form of comment",
              "createdAt": "2024-02-23T11:37:19Z",
              "updatedAt": "2024-02-23T11:37:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xIAQC",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:39:34Z",
          "updatedAt": "2024-02-23T11:39:35Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n- `credential_hash_alg_supported`. REQUIRED. The supported Algorithm used by the Wallet Instance to hash the Digital Credential for which the Status Attestation is requested,  using one of the hash algorithms listed in the [IANA - Named Information Hash Algorithm Registry](https://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg).\r\n```",
              "createdAt": "2024-02-23T11:39:34Z",
              "updatedAt": "2024-02-23T11:39:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xIAti",
          "commit": {
            "abbreviatedOid": "253579b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:40:45Z",
          "updatedAt": "2024-02-23T11:40:45Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n- `credential_hash_alg`. REQUIRED.  The hash value of a Digital Credential is derived by computing the base64url encoded hash of the Digital Credential using one of the hash algorithms listed in the [IANA - Named Information Hash Algorithm Registry](https://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg). Among the hash algorithms, `sha-256` is recommended and SHOULD be implemented by all systems.\r\n```",
              "createdAt": "2024-02-23T11:40:45Z",
              "updatedAt": "2024-02-23T11:41:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xIGwK",
          "commit": {
            "abbreviatedOid": "2db2c8b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:57:26Z",
          "updatedAt": "2024-02-23T11:57:26Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n| **credential_hash_alg** |  The hash value of a Digital Credential, derived by computing the base64url encoded hash of the Digital Credential. | this specification |\r\n```",
              "createdAt": "2024-02-23T11:57:26Z",
              "updatedAt": "2024-02-23T11:57:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xIG7g",
          "commit": {
            "abbreviatedOid": "2db2c8b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-23T11:57:54Z",
          "updatedAt": "2024-02-23T11:57:54Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n- `credential_hash_alg`. REQUIRED. The hash value of a Digital Credential is derived by computing the base64url encoded hash of the Digital Credential using one of the hash algorithms listed in the [IANA - Named Information Hash Algorithm Registry](https://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg). Among the hash algorithms, `sha-256` is recommended and SHOULD be implemented by all systems.\r\n```",
              "createdAt": "2024-02-23T11:57:54Z",
              "updatedAt": "2024-02-23T11:57:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOK4XJ0s5mwRvT",
      "title": "OCSP stapling consideration added, distinc figures 1 regarding the flow",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/8",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR adds text about how this specification brings a similar approach experienced in ocsp stampling\r\n\r\nit also splits the flow repsentation in two distinct flows: issuance and presentation.",
      "createdAt": "2024-02-13T13:44:51Z",
      "updatedAt": "2024-02-14T14:08:46Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "650bb023e094b022588e6327cdce8c9c213ac441",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "ocsp",
      "headRefOid": "0fb5eeda01022116670c1ed3645ab0af93c9d78f",
      "closedAt": "2024-02-14T14:08:46Z",
      "mergedAt": "2024-02-14T14:08:46Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "673a8e16ce50cc4ef409721c70279dc87db80446"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5v83i6",
          "commit": {
            "abbreviatedOid": "0fb5eed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T15:14:13Z",
          "updatedAt": "2024-02-13T15:14:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wEQd3",
          "commit": {
            "abbreviatedOid": "0fb5eed"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-14T12:33:13Z",
          "updatedAt": "2024-02-14T12:33:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOK4XJ0s5mwhh1",
      "title": "Privacy Considerations",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/9",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Resolves https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/4",
      "createdAt": "2024-02-13T14:18:19Z",
      "updatedAt": "2024-02-14T14:08:31Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "650bb023e094b022588e6327cdce8c9c213ac441",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "priv",
      "headRefOid": "3eb306fa5082d25560975fd89e8a051911f0b147",
      "closedAt": "2024-02-14T14:08:31Z",
      "mergedAt": "2024-02-14T14:08:31Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "7ee3a052b943bdcc4becb422b2783bbf9987c7ab"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5v9sJH",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:32:26Z",
          "updatedAt": "2024-02-13T16:32:26Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "A hash alone is not proof of possession, imo.\r\n\r\na KBT from a public key in the credential over the hash, and a nonce from the verifier would be POP.",
              "createdAt": "2024-02-13T16:32:26Z",
              "updatedAt": "2024-02-13T16:32:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9t3x",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:34:06Z",
          "updatedAt": "2024-02-13T16:34:06Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I'd like to see us move away from \"revocation/ suspension\" and towards generic attested dynamic state... Lots of use cases for status values that are not booleans, or even enums.",
              "createdAt": "2024-02-13T16:34:06Z",
              "updatedAt": "2024-02-13T16:34:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9u0P",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:35:16Z",
          "updatedAt": "2024-02-13T16:35:17Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I think this implies Status Attestations are \"single use\" ?",
              "createdAt": "2024-02-13T16:35:17Z",
              "updatedAt": "2024-02-13T16:35:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9vlc",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:36:17Z",
          "updatedAt": "2024-02-13T16:36:17Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "This is typically called the \"phone home\" problem.",
              "createdAt": "2024-02-13T16:36:17Z",
              "updatedAt": "2024-02-13T16:36:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9v07",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:36:45Z",
          "updatedAt": "2024-02-13T16:36:46Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThe Status Attestations are designed around the data minimization principle. Data minimization ensures that only the necessary information required for the scope of attesting the non revocation status of the digital credential. This minimizes the exposure of potentially sensitive data.\r\n```",
              "createdAt": "2024-02-13T16:36:45Z",
              "updatedAt": "2024-02-13T16:36:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9wRT",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T16:37:37Z",
          "updatedAt": "2024-02-13T16:37:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9yP5",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T16:41:28Z",
          "updatedAt": "2024-02-13T16:41:28Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I wouldn not enter in this and at the same time find legitimate your question.\r\n\r\nThis specification would not prevent a batch issuance of multipel status attestation to be single-use.\r\nAt the same time, in particular for offline interaction, a single attestation would be used for many verifiers",
              "createdAt": "2024-02-13T16:41:28Z",
              "updatedAt": "2024-02-13T16:41:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9-vW",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:05:06Z",
          "updatedAt": "2024-02-13T17:05:06Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "done",
              "createdAt": "2024-02-13T17:05:06Z",
              "updatedAt": "2024-02-13T17:05:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9-zF",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:05:14Z",
          "updatedAt": "2024-02-13T17:05:14Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Done",
              "createdAt": "2024-02-13T17:05:14Z",
              "updatedAt": "2024-02-13T17:05:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9-8F",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:05:32Z",
          "updatedAt": "2024-02-13T17:05:32Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I included these considerations, thank you",
              "createdAt": "2024-02-13T17:05:32Z",
              "updatedAt": "2024-02-13T17:05:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v9_QS",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:06:14Z",
          "updatedAt": "2024-02-13T17:06:15Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I have expanded the text with these consideration to not limit the status attestation to some specific use cases only",
              "createdAt": "2024-02-13T17:06:14Z",
              "updatedAt": "2024-02-13T17:06:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v-AUE",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:08:38Z",
          "updatedAt": "2024-02-13T17:08:38Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I have mentioned this but without mentioning any nonce provided by the Verifier (for obvious reasons). A jti can do the work but it doesn't seem useful, since the credential hash alone can be a sort of jti\r\n\r\ndynamically provisioning of the nonce could be mentioned if the status would not be used for offline flows, I'd suggest to move this to a separate issue and add some consideration about this aspect within the document",
              "createdAt": "2024-02-13T17:08:38Z",
              "updatedAt": "2024-02-13T17:08:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v-CWn",
          "commit": {
            "abbreviatedOid": "d34fc3d"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-13T17:13:10Z",
          "updatedAt": "2024-02-13T17:13:10Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Filed https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/11",
              "createdAt": "2024-02-13T17:13:10Z",
              "updatedAt": "2024-02-13T17:13:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5v-CuY",
          "commit": {
            "abbreviatedOid": "3eb306f"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T17:13:58Z",
          "updatedAt": "2024-02-13T17:13:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wECPC",
          "commit": {
            "abbreviatedOid": "3eb306f"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T12:00:41Z",
          "updatedAt": "2024-02-14T12:00:42Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nStatus Attestations are based on a privacy-by-design approach, reflecting a deliberate effort to balance security and privacy needs in the digital credential ecosystem.\r\n```",
              "createdAt": "2024-02-14T12:00:41Z",
              "updatedAt": "2024-02-14T12:00:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5wECVO",
          "commit": {
            "abbreviatedOid": "3eb306f"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-14T12:00:55Z",
          "updatedAt": "2024-02-14T12:00:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wFEj5",
          "commit": {
            "abbreviatedOid": "3eb306f"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T14:08:24Z",
          "updatedAt": "2024-02-14T14:08:24Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "moved to issue",
              "createdAt": "2024-02-14T14:08:24Z",
              "updatedAt": "2024-02-14T14:08:24Z"
            }
          ]
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOK4XJ0s5mw6rg",
      "title": "feat: error section and added missing todo in the rationale section",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/10",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Resolves https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/7\r\n\r\nit also adds in the rationale section a reference to the national privacy constraints that justify the requirement satisfied by this specification",
      "createdAt": "2024-02-13T15:09:45Z",
      "updatedAt": "2024-02-14T14:04:10Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "650bb023e094b022588e6327cdce8c9c213ac441",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "err",
      "headRefOid": "11cf2e347f02683b03de2b494102052684873f7f",
      "closedAt": "2024-02-14T14:04:10Z",
      "mergedAt": "2024-02-14T14:04:10Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "6efbdf64d993c4cb668508baa94f916594aa5674"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5v9qqE",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-13T16:30:37Z",
          "updatedAt": "2024-02-13T16:30:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wD49G",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T11:39:14Z",
          "updatedAt": "2024-02-14T11:39:14Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "For the sake of clarity, I explicitly would provide a list of error codes that are useful in this specification. For example, it is not clear how to handle the case of an error response due to a Credential revocation. I don't see a clear error code in the RFC6749 that is clear for this scenario. We could put this in an issue and postpone this discussion if you want.",
              "createdAt": "2024-02-14T11:39:14Z",
              "updatedAt": "2024-02-14T11:39:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5wD6CX",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "It's fine with me, we should only better clarify which are the error codes that make sense in this context, but we can solve this in a future issue. ",
          "createdAt": "2024-02-14T11:41:44Z",
          "updatedAt": "2024-02-14T11:41:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wE_nt",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T14:03:13Z",
          "updatedAt": "2024-02-14T14:03:13Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "in RFC6749 I see invalid_request, invalid_client, unauthorized_client ...",
              "createdAt": "2024-02-14T14:03:13Z",
              "updatedAt": "2024-02-14T14:03:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5wFAYr",
          "commit": {
            "abbreviatedOid": "11cf2e3"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T14:03:51Z",
          "updatedAt": "2024-02-14T14:03:51Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "moved to an issue",
              "createdAt": "2024-02-14T14:03:51Z",
              "updatedAt": "2024-02-14T14:03:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOK4XJ0s5mx0kn",
      "title": "feat: what is PoP, what it can be",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/12",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/11",
      "createdAt": "2024-02-13T17:22:02Z",
      "updatedAt": "2024-02-28T14:08:08Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "650bb023e094b022588e6327cdce8c9c213ac441",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "pop",
      "headRefOid": "63ce9087351e36f411194a649a0e1b18776f4f73",
      "closedAt": "2024-02-28T14:08:08Z",
      "mergedAt": "2024-02-28T14:08:07Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "0962d686df5ffd223a105425b4633f973fe3bd8a"
      },
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "@fmarino-ipzs This pull request addresses a limitation of the current specification. It currently only works with digital credentials that contain holder key binding.\r\n",
          "createdAt": "2024-02-23T21:39:16Z",
          "updatedAt": "2024-02-23T21:39:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5wER-Q",
          "commit": {
            "abbreviatedOid": "44e2eee"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T12:36:58Z",
          "updatedAt": "2024-02-14T12:36:58Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe essence of requiring control over the private key and its demonstration through a cryptographic operation (e.g., signing a challenge or a token) is to ensure that the entity in possession of the credential can execute actions exclusively reserved for the legitimate owner. This dual-layered approach not only reinforces the security and integrity of the status attestation process but also affirms that the entity requesting a status attestation is the same entity to which the credential was issued. \r\n```",
              "createdAt": "2024-02-14T12:36:58Z",
              "updatedAt": "2024-02-14T12:36:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5wETeT",
          "commit": {
            "abbreviatedOid": "44e2eee"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM.\r\nBtw, we are assuming here that the credential for which a Status Attestation is requested has a cryptographic holder-binding. Is this a right assumption? Should we generalize to cases where we have other holder binding mechanisms or even none?",
          "createdAt": "2024-02-14T12:40:18Z",
          "updatedAt": "2024-02-14T12:40:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5wFCY7",
          "commit": {
            "abbreviatedOid": "44e2eee"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-14T14:05:54Z",
          "updatedAt": "2024-02-14T14:05:54Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe essence of requiring control over the private key and its demonstration through a cryptographic operation (e.g., signing a challenge or a token) is to ensure that the entity in possession of the credential can execute actions exclusively reserved for the legitimate owner. The dual-layered approach of requiring both possession of the credential and control over the corresponding private key indeed reinforces the security and integrity of the status attestation process. It also ensures that the entity requesting a status attestation is indeed the same entity to which the credential was originally issued, affirming the authenticity and rightful ownership of the credential.\r\n```",
              "createdAt": "2024-02-14T14:05:54Z",
              "updatedAt": "2024-02-14T14:05:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xn676",
          "commit": {
            "abbreviatedOid": "78a2f89"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T13:36:42Z",
          "updatedAt": "2024-02-28T13:36:42Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe essence of requiring control over the private key and its demonstration through a cryptographic operation (e.g., signing a challenge or a token) is to ensure that the entity in possession of the credential can execute actions exclusively reserved for the legitimate subject. The dual-layered approach of requiring both possession of the credential and control over the corresponding private key indeed reinforces the security and integrity of the status attestation process. It also ensures that the entity requesting a status attestation is indeed the same entity to which the credential was originally issued, affirming the authenticity and rightful possession of the credential.\r\n```",
              "createdAt": "2024-02-28T13:36:42Z",
              "updatedAt": "2024-02-28T13:36:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xn7VX",
          "commit": {
            "abbreviatedOid": "78a2f89"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "minor word changes, ideally we don't need to distinguish \"owner\" and \"subject\", and \"ownership\" and \"possession\".",
          "createdAt": "2024-02-28T13:37:25Z",
          "updatedAt": "2024-02-28T13:37:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5xoKXm",
          "commit": {
            "abbreviatedOid": "15dbe4a"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T14:03:38Z",
          "updatedAt": "2024-02-28T14:05:10Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe concept of Proof of Possession (PoP) of a Credential within the framework of the Status Attestation specification encompasses a broader perspective than merely possessing the digital bytes of the Credential. It involves demonstrating rightful control or ownership over the Credential, which can manifest in various forms depending on the technology employed and the nature of the digital Credential itself. For instance, a Credential could be presented visually (de-visu) with a personal portrait serving as a binding element.\r\n```",
              "createdAt": "2024-02-28T14:03:38Z",
              "updatedAt": "2024-02-28T14:05:10Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nWhile this specification does not prescribe any additional methods for the proof of possession of the Credential, it aims to offer guidance for concrete implementations utilizing common proof of possession mechanisms. This includes, but is not limited to:\r\n```",
              "createdAt": "2024-02-28T14:04:18Z",
              "updatedAt": "2024-02-28T14:05:10Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n2. Controlling a private key that corresponds to a public key associated with the Credential, often indicated within the Credential's cnf (confirmation) claim or through a similar mechanism.\r\n```",
              "createdAt": "2024-02-28T14:04:31Z",
              "updatedAt": "2024-02-28T14:05:10Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nThe essence of requiring control over the private key and its demonstration through a cryptographic operation (e.g., signing a challenge or a token) is to ensure that the entity in possession of the Credential can execute actions exclusively reserved for the legitimate subject. The dual-layered approach of requiring both possession of the Credential and control over the corresponding private key indeed reinforces the security and integrity of the status attestation process. It also ensures that the entity requesting a Status Attestation is indeed the same entity to which the Credential was originally issued, affirming the authenticity and rightful possession of the Credential.\r\n```",
              "createdAt": "2024-02-28T14:05:04Z",
              "updatedAt": "2024-02-28T14:05:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xoMy3",
          "commit": {
            "abbreviatedOid": "63ce908"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-28T14:07:42Z",
          "updatedAt": "2024-02-28T14:07:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOK4XJ0s5nv-QK",
      "title": "Credential hash and VCI metadata paramenter",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/17",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR continues https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/6, it also:\r\n\r\n- closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/16\r\n- closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/3\r\n- closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/13",
      "createdAt": "2024-02-23T12:19:48Z",
      "updatedAt": "2024-02-23T17:47:37Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "673a8e16ce50cc4ef409721c70279dc87db80446",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "dev",
      "headRefOid": "ce0d664ca0b4ca1a0d1500335f6be46b415a96fd",
      "closedAt": "2024-02-23T17:47:36Z",
      "mergedAt": "2024-02-23T17:47:36Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "3278cd2382cdf1ffb29d02dccb9cfa3e1dece931"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5xJmAO",
          "commit": {
            "abbreviatedOid": "ce0d664"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-23T15:09:28Z",
          "updatedAt": "2024-02-23T15:09:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5xJ-w0",
          "commit": {
            "abbreviatedOid": "ce0d664"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-23T15:59:09Z",
          "updatedAt": "2024-02-23T15:59:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOK4XJ0s5nyv-E",
      "title": "editorial: intro, less word, same information",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/18",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Rereading I realized how much the introductory text had swollen with thoughts, words and considerations.\r\n\r\nI have compressed the same information into a fifth of the previous text.",
      "createdAt": "2024-02-23T20:54:10Z",
      "updatedAt": "2024-02-23T22:39:50Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "3278cd2382cdf1ffb29d02dccb9cfa3e1dece931",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "intro",
      "headRefOid": "d420251e76f6fd3a2677a70f48cd1c3a6ccbfe60",
      "closedAt": "2024-02-23T22:39:49Z",
      "mergedAt": "2024-02-23T22:39:49Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "516968a7b22fee30185ca758370b60c19e1efbb6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5xL7jK",
          "commit": {
            "abbreviatedOid": "bc5af09"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-23T21:21:18Z",
          "updatedAt": "2024-02-23T21:21:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5xMDRG",
          "commit": {
            "abbreviatedOid": "bc5af09"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-23T21:40:42Z",
          "updatedAt": "2024-02-23T21:40:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 21,
      "id": "PR_kwDOK4XJ0s5oLfii",
      "title": "editorial: privacy considerations",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/21",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/15",
      "createdAt": "2024-02-28T14:27:50Z",
      "updatedAt": "2024-02-28T20:47:03Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "0962d686df5ffd223a105425b4633f973fe3bd8a",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "pr",
      "headRefOid": "b064428285bb46c75a09f73d899a2b5a06ee4051",
      "closedAt": "2024-02-28T20:47:02Z",
      "mergedAt": "2024-02-28T20:47:02Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "d06f46d4bb51b6bbbea052915bcaf6a8b57354bd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5xojDw",
          "commit": {
            "abbreviatedOid": "313c866"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-28T14:42:11Z",
          "updatedAt": "2024-02-28T14:42:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nStatus Attestations are based on a privacy-by-design approach, reflecting a deliberate effort to balance security and privacy needs in the Digital Credential ecosystem.\r\n```",
              "createdAt": "2024-02-28T14:42:11Z",
              "updatedAt": "2024-02-28T14:42:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5xojQX",
          "commit": {
            "abbreviatedOid": "313c866"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-28T14:42:31Z",
          "updatedAt": "2024-02-28T14:42:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5xsAGF",
          "commit": {
            "abbreviatedOid": "b064428"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-28T20:26:02Z",
          "updatedAt": "2024-02-28T20:26:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 24,
      "id": "PR_kwDOK4XJ0s5oRZfo",
      "title": "fix: aud normative value",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/24",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Closes https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/23",
      "createdAt": "2024-02-29T09:46:30Z",
      "updatedAt": "2024-03-04T15:37:20Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "d06f46d4bb51b6bbbea052915bcaf6a8b57354bd",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "aud",
      "headRefOid": "3fb3294c9be1661a5af35dc61abcc1796d34b951",
      "closedAt": "2024-03-04T15:37:19Z",
      "mergedAt": "2024-03-04T15:37:19Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "913797c95163a7129305311922dc68d61881f915"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5xwCrg",
          "commit": {
            "abbreviatedOid": "3fb3294"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-29T09:48:19Z",
          "updatedAt": "2024-02-29T09:48:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5yHxpz",
          "commit": {
            "abbreviatedOid": "3fb3294"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T15:36:27Z",
          "updatedAt": "2024-03-04T15:36:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 25,
      "id": "PR_kwDOK4XJ0s5okt5e",
      "title": "normative language in status attestation response and fix response body",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/25",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "this PR\r\n\r\n- fixes the response description of the status attestation response, from OK to Created (201)\r\n- adds normative language about the status attestation response",
      "createdAt": "2024-03-04T10:50:43Z",
      "updatedAt": "2024-03-04T16:12:02Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "d06f46d4bb51b6bbbea052915bcaf6a8b57354bd",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "201",
      "headRefOid": "aa65f1951b648a75fea6b7f063b93885ab9d29de",
      "closedAt": "2024-03-04T16:12:02Z",
      "mergedAt": "2024-03-04T16:12:02Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "c2c9784e048f5995149f532ebe550634dd9f309e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s5yFVag",
          "commit": {
            "abbreviatedOid": "5ccd398"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-04T10:51:14Z",
          "updatedAt": "2024-03-04T10:51:14Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nIf the Digital Credential is valid, the Credential Issuer MUST return an HTTP status code of 201 (Created), with the content type set to `application/json`. The response MUST include a JSON object with a member named `status_attestation`, which contains the Status Attestation for the Wallet Instance, as illustrated in the following non-normative example:\r\n```",
              "createdAt": "2024-03-04T10:51:14Z",
              "updatedAt": "2024-03-04T10:51:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s5yHxfV",
          "commit": {
            "abbreviatedOid": "aa65f19"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T15:36:09Z",
          "updatedAt": "2024-03-04T15:36:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s5yIEMX",
          "commit": {
            "abbreviatedOid": "aa65f19"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-04T16:07:55Z",
          "updatedAt": "2024-03-04T16:07:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOK4XJ0s5uHo7t",
      "title": "Cumulative status attestation updates",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/33",
      "state": "MERGED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR may resolve issue #30, #20. Additionally, it is noted that the EXP timestamp MUST be superior to IAT timestamp.",
      "createdAt": "2024-04-30T09:43:35Z",
      "updatedAt": "2024-04-30T09:54:40Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "c2c9784e048f5995149f532ebe550634dd9f309e",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "statusAttestationUpdates",
      "headRefOid": "4dc593ecd4d072988490ed11a23bf4d75fe8e1b7",
      "closedAt": "2024-04-30T09:54:40Z",
      "mergedAt": "2024-04-30T09:54:40Z",
      "mergedBy": "SaraConsoliACN",
      "mergeCommit": {
        "oid": "a1fd2de245cbd8689be05a844a469d7381e02a60"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s55C6Ho",
          "commit": {
            "abbreviatedOid": "9987fe4"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-30T09:46:26Z",
          "updatedAt": "2024-04-30T09:46:27Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n| JOSE Header Parameter | Description | Reference |\r\n```",
              "createdAt": "2024-04-30T09:46:27Z",
              "updatedAt": "2024-04-30T09:46:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55C7T-",
          "commit": {
            "abbreviatedOid": "9987fe4"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-04-30T09:48:52Z",
          "updatedAt": "2024-04-30T09:48:52Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nSince the Wallet may request one or more Status Attestations, issued by the same Credential Issuer, the `credential_pop` object MUST be an array.\r\n```",
              "createdAt": "2024-04-30T09:48:52Z",
              "updatedAt": "2024-04-30T09:48:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55C7yg",
          "commit": {
            "abbreviatedOid": "9987fe4"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-04-30T09:49:46Z",
          "updatedAt": "2024-04-30T09:50:04Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n| **exp** | UNIX Timestamp with the expiration time of the JWT. It MUST be superior to the value set for `iat`  . | {{RFC9126}}, {{RFC7519}}, {{RFC7515}} |\r\n```",
              "createdAt": "2024-04-30T09:49:46Z",
              "updatedAt": "2024-04-30T09:50:04Z"
            }
          ]
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOK4XJ0s5uH6Da",
      "title": "Revert \"Cumulative status attestation updates\"",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/34",
      "state": "MERGED",
      "author": "peppelinux",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Reverts peppelinux/draft-demarco-oauth-status-attestations#33",
      "createdAt": "2024-04-30T10:20:10Z",
      "updatedAt": "2024-04-30T10:20:28Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "a1fd2de245cbd8689be05a844a469d7381e02a60",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "revert-33-statusAttestationUpdates",
      "headRefOid": "2f53b662356b4c5a5b7f78d3822e5138839b9d33",
      "closedAt": "2024-04-30T10:20:28Z",
      "mergedAt": "2024-04-30T10:20:28Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "d182c8792b533f53e86265218000558d43f5a76a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 35,
      "id": "PR_kwDOK4XJ0s5uVxmx",
      "title": "Cumulative PR - Status attestation updates",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/35",
      "state": "CLOSED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR addresses various commits made in the last days:\r\n- issue #30\r\nAdditionally, the expiration time (EXP) object in the attestation has been adjusted to 24 hours",
      "createdAt": "2024-05-02T10:37:22Z",
      "updatedAt": "2024-05-03T08:21:26Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "saraACN",
      "baseRefOid": "c2c9784e048f5995149f532ebe550634dd9f309e",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "statusAttestationUpdates",
      "headRefOid": "324dc971996147a6b98b32e8e19fc3a6250316b5",
      "closedAt": "2024-05-03T08:21:26Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "no, please close this PR and create single PR each of them aiming to resolve single issues, separately\r\n",
          "createdAt": "2024-05-03T08:19:27Z",
          "updatedAt": "2024-05-03T08:19:27Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s55Ujqd",
          "commit": {
            "abbreviatedOid": "a8aaa25"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-02T10:58:40Z",
          "updatedAt": "2024-05-02T10:59:49Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "missing definition here, please provide the definition of credential_pop, type Array[String] and the description of this parameter, before the validation requirements at line 266",
              "createdAt": "2024-05-02T10:58:41Z",
              "updatedAt": "2024-05-02T10:59:49Z"
            },
            {
              "originalPosition": 89,
              "body": "please provide here the definition of this parameter",
              "createdAt": "2024-05-02T10:59:11Z",
              "updatedAt": "2024-05-02T10:59:49Z"
            },
            {
              "originalPosition": 97,
              "body": "this is a consideration that is not required here, this must be merged within the definition of `credential_pop`",
              "createdAt": "2024-05-02T10:59:45Z",
              "updatedAt": "2024-05-02T10:59:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55Zd0l",
          "commit": {
            "abbreviatedOid": "f483097"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-02T19:26:26Z",
          "updatedAt": "2024-05-02T19:29:04Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "please, the definition of the request parameter, where the credential_pop must be defined.",
              "createdAt": "2024-05-02T19:26:27Z",
              "updatedAt": "2024-05-02T21:03:17Z"
            },
            {
              "originalPosition": 86,
              "body": "this is not the way to define a parameter neither to define a new section.\r\n\r\nPlease follow my previous suggestion.",
              "createdAt": "2024-05-02T19:27:07Z",
              "updatedAt": "2024-05-02T19:29:04Z"
            },
            {
              "originalPosition": 88,
              "body": "as already mentioned, this must be defined in the text about the definition of the parameter. this is not good in this way.",
              "createdAt": "2024-05-02T19:28:13Z",
              "updatedAt": "2024-05-02T19:29:04Z"
            },
            {
              "originalPosition": 90,
              "body": "as mentioned, the credential_pop is now supposed to be an array, not a json object",
              "createdAt": "2024-05-02T19:28:50Z",
              "updatedAt": "2024-05-02T19:29:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55c-st",
          "commit": {
            "abbreviatedOid": "324dc97"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-03T08:20:04Z",
          "updatedAt": "2024-05-03T08:20:05Z",
          "comments": [
            {
              "originalPosition": 245,
              "body": "this is wrong, already said. This is wrong",
              "createdAt": "2024-05-03T08:20:05Z",
              "updatedAt": "2024-05-03T08:20:05Z"
            }
          ]
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDOK4XJ0s5ueL78",
      "title": "breaking change: credential_pop is an array",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36",
      "state": "OPEN",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR:\r\n- Addresses issue #30\r\n- Fixes some editorial issues\r\n- Adds a note on the 'exp' parameter, which must be greater than the 'iat' parameter\r\n",
      "createdAt": "2024-05-03T13:03:03Z",
      "updatedAt": "2024-05-13T16:33:14Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "743e7eab2506600adcde53db21ca8cdb732c958e",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-20240503_1",
      "headRefOid": "07023177da2255a1cb572d500bcdc7b221055e5e",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. For example in the text we have the following sentence:\r\n\r\nthis would tend to introduce a json object in the response with an array of statuses",
          "createdAt": "2024-05-13T13:25:20Z",
          "updatedAt": "2024-05-13T13:25:20Z"
        },
        {
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "body": "> It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. For example in the text we have the following sentence:\r\n> \r\n> > In cases where a Status Assertion request is made for a Digital Credential that does not exist, has expired, been revoked, or is in any way invalid, or if the HTTP Request is compromised by missing or incorrect parameters, the Credential Issuer is required to respond with an HTTP Response. This response should have a status code of `400` and use `application/json` as the content type, including the following parameters:\r\n> \r\n> Does this mean that if the request includes Credential PoP A and Credential PoP B and the Credential B is invalid, the Credential Issuer must give an error? Probably the response should contain only the status assertion for Credential A without giving an error response?\r\n\r\nWe have two error codes in the spec - one for invalid request and the second for invalid credential. How would you differentiate between the two errors ? Can it happen that there is error in request for Credential PoP B while the request for Credential PoP A is correct? If this cannot happen then your proposal is ok. ",
          "createdAt": "2024-05-13T14:45:02Z",
          "updatedAt": "2024-05-13T14:45:02Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> > It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. For example in the text we have the following sentence:\r\n> \r\n> this would tend to introduce a json object in the response with an array of statuses\r\n\r\nor, differently\r\n\r\nregarding the response of the status assertions, instead of using a complex json object WDYT about returning an array of JWT/CWT where each JWT/CWT matches the one provided within the request and in the same order\r\n\r\nwhere\r\n\r\nthe header parameter typ would say if it is a statu sassertion or a status assertion error?\r\n\r\nWDYT @fmarino-ipzs @OR13 ?\r\nusing the power of the JWT/CWT objects we would avoid the json object envelope with unsigned (meta)data",
          "createdAt": "2024-05-13T14:52:58Z",
          "updatedAt": "2024-05-13T14:52:58Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> > It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. For example in the text we have the following sentence:\r\n> > > In cases where a Status Assertion request is made for a Digital Credential that does not exist, has expired, been revoked, or is in any way invalid, or if the HTTP Request is compromised by missing or incorrect parameters, the Credential Issuer is required to respond with an HTTP Response. This response should have a status code of `400` and use `application/json` as the content type, including the following parameters:\r\n> > \r\n> > \r\n> > Does this mean that if the request includes Credential PoP A and Credential PoP B and the Credential B is invalid, the Credential Issuer must give an error? Probably the response should contain only the status assertion for Credential A without giving an error response?\r\n> \r\n> We have two error codes in the spec - one for invalid request and the second for invalid credential. How would you differentiate between the two errors ? Can it happen that there is error in request for Credential PoP B while the request for Credential PoP A is correct? If this cannot happen then your proposal is ok.\r\n\r\n@marinaado WDYT about this conversation?\r\nhttps://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36#discussion_r1598713649",
          "createdAt": "2024-05-13T16:22:10Z",
          "updatedAt": "2024-05-13T16:22:10Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the following is a good solution for now\"\r\n\r\n```\r\nHTTP POST /status \r\ncontent-type: application/json\r\n{\r\n  \"status_assertion_requests\" : [\"${base64url(json({typ: (some pop for status-assertion)+jwt, ...}))}.payload.signature\", ... ]\r\n}\r\n... Response :\r\n{\r\n  \"status_assertions\" : [\"${base64url(json({typ: status-assertion+jwt, ...}))}.payload.signature\", ... ]\r\n}\r\n```\r\n\r\n\r\n",
          "createdAt": "2024-05-13T16:27:41Z",
          "updatedAt": "2024-05-13T16:27:57Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "Short recap\r\n\r\nin the request:\r\n- `credential_pop` renamed to `status_assertion_requests`\r\n- the position within the array of each `status_assertion_request` object must match the same position in the subsequent response\r\n\r\nin the response:\r\n- `status_assertions` renamed to `status_assertion_responses`\r\n- each element in the array is related to the element contained in the request at the same position\r\n- each element can be an error using `typ` set to `status-assertion-error+{jwt,cwt}` or `status-assertion+{jwt,cwd}`\r\n- the matching entry in the response must be of the same type requested, eg: if the entry in the request is jwt, therefore the entry at  the same position in the response must be jwt",
          "createdAt": "2024-05-13T16:32:35Z",
          "updatedAt": "2024-05-13T16:32:35Z"
        },
        {
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "body": "> I think the following is a good solution for now\"\r\n> \r\n> ```\r\n> HTTP POST /status \r\n> content-type: application/json\r\n> {\r\n>   \"status_assertion_requests\" : [\"${base64url(json({typ: (some pop for status-assertion)+jwt, ...}))}.payload.signature\", ... ]\r\n> }\r\n> ... Response :\r\n> {\r\n>   \"status_assertions\" : [\"${base64url(json({typ: status-assertion+jwt, ...}))}.payload.signature\", ... ]\r\n> }\r\n> ```\r\n\r\n@SaraConsoliACN the non normative examples must be updated with the example provided here by Orie",
          "createdAt": "2024-05-13T16:33:13Z",
          "updatedAt": "2024-05-13T16:33:13Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s55faBo",
          "commit": {
            "abbreviatedOid": "1b221a7"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-03T14:26:25Z",
          "updatedAt": "2024-05-03T14:30:19Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "```suggestion\r\nGiven that the Wallet may request one or more Status Attestations from the same Credential Issuer, the `credential_pop` parameter is subject to the following specification:\r\n- credential_pop: REQUIRED. It MUST be implemented as an array of strings, where each string represents a Digital Credential proof of possession.\r\n```",
              "createdAt": "2024-05-03T14:26:25Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\n- The Credential Issuer MUST verify the signature of all elements in the `credential_pop` object using the public key contained within the Digital Credential where the `credential_pop` is referred to;\r\n```",
              "createdAt": "2024-05-03T14:27:48Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\n- the Credential Issuer MUST verify that it is the legitimate Issuer of the Digital Credential to which the `credential_pop` refers.\r\n```",
              "createdAt": "2024-05-03T14:29:10Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            },
            {
              "originalPosition": 118,
              "body": "```suggestion\r\n    \"status_attestations\": [\"eyJhbGciOiJFUzI1Ni ...\", \"...\"],\r\n```\r\n\r\nplease bring it as plural",
              "createdAt": "2024-05-03T14:30:00Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            },
            {
              "originalPosition": 118,
              "body": "here and in all the text",
              "createdAt": "2024-05-03T14:30:10Z",
              "updatedAt": "2024-05-03T14:30:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55gGBO",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-03T15:52:50Z",
          "updatedAt": "2024-05-03T15:53:50Z",
          "comments": [
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n| **exp** | UNIX Timestamp with the expiration time of the JWT. It MUST be superior to the value set for `iat`. | {{RFC9126}}, {{RFC7519}}, {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-03T15:52:50Z",
              "updatedAt": "2024-05-03T15:53:50Z"
            },
            {
              "originalPosition": 121,
              "body": "```suggestion\r\nIf the Digital Credential is valid, the Credential Issuer MUST return an HTTP status code of 201 (Created), with the content type set to `application/json`. The response MUST include a JSON object with a member named `status_attestations`, which contains a list of Status Attestations, as illustrated in the following non-normative example:\r\n```",
              "createdAt": "2024-05-03T15:53:27Z",
              "updatedAt": "2024-05-03T15:53:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55oGdA",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T11:14:25Z",
          "updatedAt": "2024-05-06T11:14:25Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "since the value is an array, wouldn't be better to rename this to `credentials_pop`?\r\n\r\n@marinaado \r\n@fmarino-ipzs \r\n@OR13 ",
              "createdAt": "2024-05-06T11:14:25Z",
              "updatedAt": "2024-05-06T11:14:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55o63h",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T13:20:26Z",
          "updatedAt": "2024-05-06T13:20:26Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I wonder if these are all really \"credentials\"... or are they simply assertions related to a credential that had a confirmation claim?\r\n\r\n- https://datatracker.ietf.org/doc/html/rfc7800#section-3.1\r\n- https://datatracker.ietf.org/doc/html/rfc8747#section-3.1\r\n\r\nNow that its an array, can each of these items demonstrate possession of a different key?\r\n\r\nCan methods be mixed, for example, cred-1 uses COSE Key, cred-2 use JKT ?\r\n\r\n",
              "createdAt": "2024-05-06T13:20:26Z",
              "updatedAt": "2024-05-06T13:20:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55o7ve",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "In moving to an array, a lot of new edge cases have been created.\r\n\r\nI think we should add some examples and address them while introducing this change.\r\n\r\nI'm happy to propose text, but first lets have a discussion here:\r\n\r\nhttps://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36/files#r1591006026",
          "createdAt": "2024-05-06T13:22:10Z",
          "updatedAt": "2024-05-06T13:22:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s55o9vL",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T13:26:01Z",
          "updatedAt": "2024-05-06T13:26:02Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I wonder if this should be changed to JSON.\r\n\r\nIf it says like this, I think an example showing application/x-www-form-urlencoded of CWT and JWT would help communicate the intention here, I am happy to produce one if there is agreement.",
              "createdAt": "2024-05-06T13:26:02Z",
              "updatedAt": "2024-05-06T13:26:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55o-mk",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T13:27:45Z",
          "updatedAt": "2024-05-06T13:27:45Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Given the updates from version 00 to 01, the term credentials is misleading because the items within that array are not credentials but assertions that prove credential possession. Therefore, we should rename this parameter to better reflect its purpose.",
              "createdAt": "2024-05-06T13:27:45Z",
              "updatedAt": "2024-05-06T13:27:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55o_H7",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-06T13:28:45Z",
          "updatedAt": "2024-05-06T13:28:45Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "I'm also in favor of `application/json` too\r\n\r\n@marinaado @fmarino-ipzs ^",
              "createdAt": "2024-05-06T13:28:45Z",
              "updatedAt": "2024-05-06T13:28:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s55vpWt",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-07T09:05:55Z",
          "updatedAt": "2024-05-07T09:05:55Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "another solution @SaraConsoliACN @OR13 to prevent the use of `application/json` would be this\r\n\r\n`credential_pop=\"...\"&credential_pop=\"...\"&...`\r\n\r\ntaking into account that credential_pop is deprecable now and require a name change",
              "createdAt": "2024-05-07T09:05:55Z",
              "updatedAt": "2024-05-07T09:05:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s559EqS",
          "commit": {
            "abbreviatedOid": "5582bac"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-08T15:52:30Z",
          "updatedAt": "2024-05-08T15:54:25Z",
          "comments": [
            {
              "originalPosition": 134,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2024-05-08T15:52:30Z",
              "updatedAt": "2024-05-08T15:54:25Z"
            },
            {
              "originalPosition": 121,
              "body": "```suggestion\r\nIf the Digital Credential is valid, the Credential Issuer MUST return an HTTP status code of 201 (Created), with the content type set to `application/json`. The response MUST include a JSON object with a member named `status_attestations`, which contains an array of strings. Each string in the array represents a Status Attestation, as illustrated in the following non-normative example:\r\n```",
              "createdAt": "2024-05-08T15:54:14Z",
              "updatedAt": "2024-05-08T15:54:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56EPTY",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-09T13:15:07Z",
          "updatedAt": "2024-05-09T13:15:08Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "if we agree, we definitively use `application/json` and therefore the request would be like this:\r\n\r\n````\r\nPOST /status HTTP/1.1\r\nHost: issuer.example.org\r\nContent-Type: application/json\r\n\r\n{ \"credential_pop\" : [$CredentialPoPJWT, $CredentialPoPCWT, ... ] }\r\n````",
              "createdAt": "2024-05-09T13:15:08Z",
              "updatedAt": "2024-05-09T13:18:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56ExCL",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-09T14:17:11Z",
          "updatedAt": "2024-05-09T14:17:11Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "If the data posted is not credentials, it might be better to give it a more generic name, like `presentations` or `arguments`, or `parameters`",
              "createdAt": "2024-05-09T14:17:11Z",
              "updatedAt": "2024-05-09T14:17:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56L9hK",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:16:23Z",
          "updatedAt": "2024-05-10T12:16:23Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "In my opinion, `parameters` could be a good choice. I'm going to suggest this modification.",
              "createdAt": "2024-05-10T12:16:23Z",
              "updatedAt": "2024-05-10T12:16:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56UuC-",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T10:03:09Z",
          "updatedAt": "2024-05-13T10:03:10Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "we have a section defining the Digital Credential PoP here: https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/36/files#diff-6018989306b8996e79d471eb123fc3b59796d1635384b6faac8cdb36cd5f49ccR297\r\n\r\nI'm not sure about the name presentation\r\n\r\n@SaraConsoliACN please revert the change to credential_pop to allow this PR to be merged and create another issue for discussing the json member name change",
              "createdAt": "2024-05-13T10:03:09Z",
              "updatedAt": "2024-05-13T10:03:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56V932",
          "commit": {
            "abbreviatedOid": "cfda2ed"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:36:31Z",
          "updatedAt": "2024-05-13T12:36:31Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "@OR13 the discussion is moved to this issue: https://github.com/peppelinux/draft-demarco-oauth-status-attestations/issues/43\r\n\r\nI'd suggest to unblock this PR and continue the discussion about the nature of the parameters and the good semantic to have outside of this PR if we agree\r\n\r\n@fmarino-ipzs @marinaado ^",
              "createdAt": "2024-05-13T12:36:31Z",
              "updatedAt": "2024-05-13T12:36:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56V-rw",
          "commit": {
            "abbreviatedOid": "13a3a78"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-13T12:38:12Z",
          "updatedAt": "2024-05-13T12:38:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56WJKH",
          "commit": {
            "abbreviatedOid": "fdf7d8c"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:57:21Z",
          "updatedAt": "2024-05-13T12:57:21Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "```suggestion\r\n| JOSE Header Parameter | Description | Reference |\r\n```",
              "createdAt": "2024-05-13T12:57:21Z",
              "updatedAt": "2024-05-13T12:57:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WPZe",
          "commit": {
            "abbreviatedOid": "fdf7d8c"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "It is not yet clear in the text what happens if a Status Assertion Request fails due to a single or subset of clredentials. \r\nFor example in the text we have the following sentence: \r\n> In cases where a Status Assertion request is made for a Digital Credential that does not exist, has expired, been revoked, or is in any way invalid, or if the HTTP Request is compromised by missing or incorrect parameters, the Credential Issuer is required to respond with an HTTP Response. This response should have a status code of `400` and use `application/json` as the content type, including the following parameters:\r\n\r\nDoes this mean that if the request includes Credential PoP A and Credential PoP B and the Credential B is invalid, the Credential Issuer must give an error? Probably the response should contain only the status assertion for Credential A without giving an error response?",
          "createdAt": "2024-05-13T13:07:41Z",
          "updatedAt": "2024-05-13T13:07:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56WxMB",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T13:58:12Z",
          "updatedAt": "2024-05-13T13:58:13Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "if these need more params, we might consider this interface to be an array of objects containing encoded credentials.",
              "createdAt": "2024-05-13T13:58:12Z",
              "updatedAt": "2024-05-13T13:58:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WyDh",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T13:59:38Z",
          "updatedAt": "2024-05-13T13:59:38Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "```suggestion\r\n| **exp** | UNIX Timestamp with the expiration time of the JWT. It MUST be greater than the value set for `iat`. | {{RFC9126}}, {{RFC7519}}, {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-13T13:59:38Z",
              "updatedAt": "2024-05-13T14:54:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56Wyc-",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T14:00:17Z",
          "updatedAt": "2024-05-13T14:00:17Z",
          "comments": [
            {
              "originalPosition": 119,
              "body": "```suggestion\r\n| **exp** | UNIX Timestamp with the expiration time of the JWT. It MUST be greater than the value set for `iat`. | {{RFC9126}}, {{RFC7519}}, {{RFC7515}} |\r\n```",
              "createdAt": "2024-05-13T14:00:17Z",
              "updatedAt": "2024-05-13T14:00:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WykE",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-13T14:00:27Z",
          "updatedAt": "2024-05-13T14:00:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56XXDt",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T14:51:19Z",
          "updatedAt": "2024-05-13T14:51:19Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "What about encoding any required parameter within the JWT/CWT according to the schema type `status-assertion-request+{jwt,cwt}`?\r\n\r\nthis would make each object consistent in its purpose\r\n\r\nwe may say that any additional parameter could be included, while only the required set of attributes, for each status request is defined within the specs",
              "createdAt": "2024-05-13T14:51:19Z",
              "updatedAt": "2024-05-13T15:58:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56X_cg",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:00:45Z",
          "updatedAt": "2024-05-13T16:00:45Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "therefore we could rename credential_pop to `status_assertion_requests` where each element within the array configures a `typ` value set to `status-assertion-request+{jwt,cwt}`\r\n\r\nthe corresponding response would be a json array containing for each element with a `typ` value set to `status-assertion+{jwt,cwt}` or ar `status-assertion-error+{jwt,cwt}` at the same position of the corresponding one within the request.",
              "createdAt": "2024-05-13T16:00:45Z",
              "updatedAt": "2024-05-13T16:00:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56YHy7",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:13:50Z",
          "updatedAt": "2024-05-13T16:13:50Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "You would need to verify / decode the protected header to distinguish the types... but it is nice that they are required to advertise their typ consistent with the JWT BCP.",
              "createdAt": "2024-05-13T16:13:50Z",
              "updatedAt": "2024-05-13T16:13:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56YMMw",
          "commit": {
            "abbreviatedOid": "752ef82"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:21:33Z",
          "updatedAt": "2024-05-13T16:21:34Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "yes, I was wondering about \"in object veritas\"",
              "createdAt": "2024-05-13T16:21:33Z",
              "updatedAt": "2024-05-13T16:21:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 37,
      "id": "PR_kwDOK4XJ0s5unkTi",
      "title": "credential_pop typ with status-attestation-request+cwt",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/37",
      "state": "OPEN",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "this commit may resolve issue #20.",
      "createdAt": "2024-05-06T10:15:37Z",
      "updatedAt": "2024-05-13T11:00:25Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "85337bd85e2eba1f68c885748116e328975e1935",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-20240506_issue20",
      "headRefOid": "511db6b92d79ff00d8e7837ca78dea9d757a7f9d",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s55oyWp",
          "commit": {
            "abbreviatedOid": "0c39d9b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-05-06T13:02:45Z",
          "updatedAt": "2024-05-06T13:04:47Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\ndefined by JSON Web Token (JWT) {{RFC7519}}, the term \"CBOR Web Token (CWT)\" defined in {{RFC8392}}.\r\n```",
              "createdAt": "2024-05-06T13:02:45Z",
              "updatedAt": "2024-05-06T13:04:47Z"
            },
            {
              "originalPosition": 22,
              "body": "we should say here in which cases, when JWT is must be set to ... when CWT ...",
              "createdAt": "2024-05-06T13:03:21Z",
              "updatedAt": "2024-05-06T13:04:47Z"
            },
            {
              "originalPosition": 34,
              "body": "as mentioned before",
              "createdAt": "2024-05-06T13:04:07Z",
              "updatedAt": "2024-05-06T13:04:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s558S4W",
          "commit": {
            "abbreviatedOid": "0c39d9b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-08T14:28:26Z",
          "updatedAt": "2024-05-08T14:28:26Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "if this is a JOSE header it cannot be CWT\r\n\r\nthis is related to JOSE",
              "createdAt": "2024-05-08T14:28:26Z",
              "updatedAt": "2024-05-08T14:28:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56M7K1",
          "commit": {
            "abbreviatedOid": "0770b73"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T14:27:45Z",
          "updatedAt": "2024-05-10T14:27:45Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\n| Header Parameter Name | Description | Reference |\r\n```",
              "createdAt": "2024-05-10T14:27:45Z",
              "updatedAt": "2024-05-10T14:27:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56M7WP",
          "commit": {
            "abbreviatedOid": "0770b73"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T14:28:08Z",
          "updatedAt": "2024-05-10T14:28:08Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\n| Payload Parameter Name | Description | Reference |\r\n```",
              "createdAt": "2024-05-10T14:28:08Z",
              "updatedAt": "2024-05-10T14:28:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56M7ed",
          "commit": {
            "abbreviatedOid": "0770b73"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T14:28:24Z",
          "updatedAt": "2024-05-10T14:28:25Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\n| Header Parameter Name | Description | Reference |\r\n```",
              "createdAt": "2024-05-10T14:28:24Z",
              "updatedAt": "2024-05-10T14:28:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56M7su",
          "commit": {
            "abbreviatedOid": "0770b73"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T14:28:50Z",
          "updatedAt": "2024-05-10T14:28:50Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\n| Payload Parameter Name | Description | Reference |\r\n```",
              "createdAt": "2024-05-10T14:28:50Z",
              "updatedAt": "2024-05-10T14:28:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56VJay",
          "commit": {
            "abbreviatedOid": "c0a708c"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T10:58:56Z",
          "updatedAt": "2024-05-13T10:58:57Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "please mention that the prosed non normative example is provided in an unencoded diagnostic representation ...",
              "createdAt": "2024-05-13T10:58:56Z",
              "updatedAt": "2024-05-13T10:58:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56VKC9",
          "commit": {
            "abbreviatedOid": "80fc807"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T11:00:24Z",
          "updatedAt": "2024-05-13T11:00:25Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "it is not the cnf itself bu the sub-member contained in it, such as jwk for JWT and Cose Key for CWT, while there may be other parameters like `did` for instance\r\n\r\nthis must be included in this description",
              "createdAt": "2024-05-13T11:00:24Z",
              "updatedAt": "2024-05-13T11:00:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 38,
      "id": "PR_kwDOK4XJ0s5u2TkZ",
      "title": "Draft name changed",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/38",
      "state": "MERGED",
      "author": "SaraConsoliACN",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This commit solves the issue #5",
      "createdAt": "2024-05-08T08:19:45Z",
      "updatedAt": "2024-05-09T16:41:23Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "d182c8792b533f53e86265218000558d43f5a76a",
      "headRepository": "SaraConsoliACN/draft-demarco-oauth-status-attestations",
      "headRefName": "SaraConsoliACN-20240508_1",
      "headRefOid": "0b275917ae1e6287e1201420fe79b208047df3db",
      "closedAt": "2024-05-09T16:41:23Z",
      "mergedAt": "2024-05-09T16:41:23Z",
      "mergedBy": "peppelinux",
      "mergeCommit": {
        "oid": "d3b2d0827a0b313bad03549aa0e180075211e8e4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s555Tl3",
          "commit": {
            "abbreviatedOid": "5e03b67"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-08T08:56:11Z",
          "updatedAt": "2024-05-08T08:56:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56EYJM",
          "commit": {
            "abbreviatedOid": "5e03b67"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-09T13:29:20Z",
          "updatedAt": "2024-05-09T13:29:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56E5J5",
          "commit": {
            "abbreviatedOid": "5e03b67"
          },
          "author": "fmarino-ipzs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-09T14:32:16Z",
          "updatedAt": "2024-05-09T14:32:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56F70O",
          "commit": {
            "abbreviatedOid": "a54ce41"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-09T16:40:10Z",
          "updatedAt": "2024-05-09T16:40:10Z",
          "comments": [
            {
              "originalPosition": 523,
              "body": "```suggestion\r\n\r\n-02\r\n\r\n* Name of the draft changed from `OAuth Status Attestations` to `OAuth Status Assertions`\r\n```",
              "createdAt": "2024-05-09T16:40:10Z",
              "updatedAt": "2024-05-09T16:40:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDOK4XJ0s5vFTiN",
      "title": "Editorial changes all through the specification",
      "url": "https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/42",
      "state": "OPEN",
      "author": "marinaado",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-10T10:14:17Z",
      "updatedAt": "2024-05-13T16:24:30Z",
      "baseRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "baseRefName": "main",
      "baseRefOid": "85337bd85e2eba1f68c885748116e328975e1935",
      "headRepository": "peppelinux/draft-demarco-oauth-status-attestations",
      "headRefName": "marinaado-patch-1",
      "headRefOid": "82be3b6d5af95e2146bcb24c5aca642a56e4dfb7",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOK4XJ0s56L9EO",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:15:10Z",
          "updatedAt": "2024-05-10T12:15:10Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe figure below illustrates the process by which a Wallet Instance requests a Status Assertion from the Credential Issuer and subsequently receives it.\r\n```\r\n\r\nwe already have the text under the figure defining its number.",
              "createdAt": "2024-05-10T12:15:10Z",
              "updatedAt": "2024-05-10T12:15:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56L9jH",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:16:27Z",
          "updatedAt": "2024-05-10T12:16:28Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I'm wondering if it would be the good time to include a link to \"Article 8 of the European Convention on Human Rights\"",
              "createdAt": "2024-05-10T12:16:27Z",
              "updatedAt": "2024-05-10T12:16:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56L-FO",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:17:49Z",
          "updatedAt": "2024-05-10T12:17:50Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "it would be good having a link or a ref to \"European Union's General Data Protection Regulation (GDPR)\" as well, to specific articles defining this requirements",
              "createdAt": "2024-05-10T12:17:50Z",
              "updatedAt": "2024-05-10T12:17:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56L-9x",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-10T12:20:03Z",
          "updatedAt": "2024-05-10T12:20:04Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "```suggestion\r\n6. **Real-time validation**: OAuth Status Lists provide the possibility to do real-time validation of the Digital Credential status. To support the real-time status validation use cases, a Wallet MAY implement strategy to request a new Status Assertion before sending it to the Verifier.\r\n```",
              "createdAt": "2024-05-10T12:20:03Z",
              "updatedAt": "2024-05-10T12:20:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56V7YG",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:31:56Z",
          "updatedAt": "2024-05-13T12:31:56Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "done",
              "createdAt": "2024-05-13T12:31:56Z",
              "updatedAt": "2024-05-13T12:31:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56V_jc",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:39:56Z",
          "updatedAt": "2024-05-13T12:39:56Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "I was thinking again about this again and perhaps we should add that this is possible in online scenarios only. ",
              "createdAt": "2024-05-13T12:39:56Z",
              "updatedAt": "2024-05-13T12:39:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WAYt",
          "commit": {
            "abbreviatedOid": "4dea78b"
          },
          "author": "marinaado",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T12:41:37Z",
          "updatedAt": "2024-05-13T12:41:37Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I usually prefer to enumerate the figures and then to specifically point to them in the text. But i guess since the image is right bellow this works as well. ",
              "createdAt": "2024-05-13T12:41:37Z",
              "updatedAt": "2024-05-13T12:41:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56Wqbg",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T13:47:18Z",
          "updatedAt": "2024-05-13T13:47:18Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "we should move these to informative references ",
              "createdAt": "2024-05-13T13:47:18Z",
              "updatedAt": "2024-05-13T13:47:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56WtCB",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T13:51:18Z",
          "updatedAt": "2024-05-13T13:51:18Z",
          "comments": [
            {
              "originalPosition": 221,
              "body": "```suggestion\r\nto the confirmation claim assigned by the issuer and contained within\r\n```",
              "createdAt": "2024-05-13T13:51:18Z",
              "updatedAt": "2024-05-13T13:51:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56Wvoe",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-13T13:55:40Z",
          "updatedAt": "2024-05-13T13:55:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOK4XJ0s56W55I",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "SaraConsoliACN",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T14:11:12Z",
          "updatedAt": "2024-05-13T14:11:13Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "It may be resolved by commit https://github.com/peppelinux/draft-demarco-oauth-status-attestations/pull/42/commits/82be3b6d5af95e2146bcb24c5aca642a56e4dfb7",
              "createdAt": "2024-05-13T14:11:12Z",
              "updatedAt": "2024-05-13T14:11:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56YLkl",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:20:08Z",
          "updatedAt": "2024-05-13T16:20:08Z",
          "comments": [
            {
              "originalPosition": 221,
              "body": "this text generalize the scope of the cnf claim within the jwt/cwt\r\n\r\nthis makes sense to me",
              "createdAt": "2024-05-13T16:20:08Z",
              "updatedAt": "2024-05-13T16:20:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOK4XJ0s56YNel",
          "commit": {
            "abbreviatedOid": "82be3b6"
          },
          "author": "peppelinux",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-13T16:24:29Z",
          "updatedAt": "2024-05-13T16:24:30Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "@SaraConsoliACN Orie is saying that instead using a markdown href it would be better to use the informative reference section if I get it right\r\n\r\n@marinaado WDYT?",
              "createdAt": "2024-05-13T16:24:29Z",
              "updatedAt": "2024-05-13T16:24:36Z"
            }
          ]
        }
      ]
    }
  ]
}